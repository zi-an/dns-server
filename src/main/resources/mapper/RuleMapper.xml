<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dns.dao.RuleMapper">
  <resultMap id="BaseResultMap" type="cn.dns.entity.Rule">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ipFrom" jdbcType="BIGINT" property="ipFrom" />
    <result column="ipTo" jdbcType="BIGINT" property="ipTo" />
    <result column="timeFrom" jdbcType="INTEGER" property="timeFrom" />
    <result column="timeTo" jdbcType="INTEGER" property="timeTo" />
    <result column="matchMode" jdbcType="VARCHAR" property="matchMode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="dispatchMode" jdbcType="VARCHAR" property="dispatchMode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ipFrom, ipTo, timeFrom, timeTo, matchMode, `name`, priority, enabled, dispatchMode
  </sql>
  <select id="selectByExample" parameterType="cn.dns.entity.RuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `rule`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `rule`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `rule`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.dns.entity.RuleExample">
    delete from `rule`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.dns.entity.Rule" useGeneratedKeys="true" keyProperty="id">
    insert into `rule` (id, ipFrom, ipTo, 
      timeFrom, timeTo, matchMode,
      `name`, priority, enabled, dispatchMode
      )
    values (#{id,jdbcType=BIGINT}, #{ipFrom,jdbcType=BIGINT}, #{ipTo,jdbcType=BIGINT}, 
      #{timeFrom,jdbcType=INTEGER}, #{timeTo,jdbcType=INTEGER}, #{matchMode,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{priority,jdbcType=INTEGER}, #{enabled,jdbcType=BIT}, #{dispatchMode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.dns.entity.Rule" useGeneratedKeys="true" keyProperty="id">
    insert into `rule`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ipFrom != null">
        ipFrom,
      </if>
      <if test="ipTo != null">
        ipTo,
      </if>
      <if test="timeFrom != null">
        timeFrom,
      </if>
      <if test="timeTo != null">
        timeTo,
      </if>
      <if test="matchMode != null">
        matchMode,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="dispatchMode != null">
        dispatchMode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ipFrom != null">
        #{ipFrom,jdbcType=BIGINT},
      </if>
      <if test="ipTo != null">
        #{ipTo,jdbcType=BIGINT},
      </if>
      <if test="timeFrom != null">
        #{timeFrom,jdbcType=INTEGER},
      </if>
      <if test="timeTo != null">
        #{timeTo,jdbcType=INTEGER},
      </if>
      <if test="matchMode != null">
        #{matchMode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="dispatchMode != null">
        #{dispatchMode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.dns.entity.RuleExample" resultType="java.lang.Long">
    select count(*) from `rule`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `rule`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.ipFrom != null">
        ipFrom = #{record.ipFrom,jdbcType=BIGINT},
      </if>
      <if test="record.ipTo != null">
        ipTo = #{record.ipTo,jdbcType=BIGINT},
      </if>
      <if test="record.timeFrom != null">
        timeFrom = #{record.timeFrom,jdbcType=INTEGER},
      </if>
      <if test="record.timeTo != null">
        timeTo = #{record.timeTo,jdbcType=INTEGER},
      </if>
      <if test="record.matchMode != null">
        matchMode = #{record.matchMode,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.dispatchMode != null">
        dispatchMode = #{record.dispatchMode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `rule`
    set id = #{record.id,jdbcType=BIGINT},
      ipFrom = #{record.ipFrom,jdbcType=BIGINT},
      ipTo = #{record.ipTo,jdbcType=BIGINT},
      timeFrom = #{record.timeFrom,jdbcType=INTEGER},
      timeTo = #{record.timeTo,jdbcType=INTEGER},
      matchMode = #{record.matchMode,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      enabled = #{record.enabled,jdbcType=BIT},
      dispatchMode = #{record.dispatchMode,jdbcType=VARCHAR},
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dns.entity.Rule">
    update `rule`
    <set>
      <if test="ipFrom != null">
        ipFrom = #{ipFrom,jdbcType=BIGINT},
      </if>
      <if test="ipTo != null">
        ipTo = #{ipTo,jdbcType=BIGINT},
      </if>
      <if test="timeFrom != null">
        timeFrom = #{timeFrom,jdbcType=INTEGER},
      </if>
      <if test="timeTo != null">
        timeTo = #{timeTo,jdbcType=INTEGER},
      </if>
      <if test="matchMode != null">
        matchMode = #{matchMode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="dispatchMode != null">
        dispatchMode = #{dispatchMode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dns.entity.Rule">
    update `rule`
    set ipFrom = #{ipFrom,jdbcType=BIGINT},
      ipTo = #{ipTo,jdbcType=BIGINT},
      timeFrom = #{timeFrom,jdbcType=INTEGER},
      timeTo = #{timeTo,jdbcType=INTEGER},
      matchMode = #{matchMode,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT},
      dispatchMode = #{dispatchMode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `rule`
    (id, ipFrom, ipTo, timeFrom, timeTo, matchMode, `name`, priority, enabled, dispatchMode)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.ipFrom,jdbcType=BIGINT}, #{item.ipTo,jdbcType=BIGINT}, 
        #{item.timeFrom,jdbcType=INTEGER}, #{item.timeTo,jdbcType=INTEGER}, #{item.matchMode,jdbcType=VARCHAR},
        #{item.name,jdbcType=VARCHAR}, #{item.priority,jdbcType=INTEGER}, #{item.enabled,jdbcType=BIT}, #{item.dispatchMode,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `rule` (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'ipFrom'.toString() == column.value">
          #{item.ipFrom,jdbcType=BIGINT}
        </if>
        <if test="'ipTo'.toString() == column.value">
          #{item.ipTo,jdbcType=BIGINT}
        </if>
        <if test="'timeFrom'.toString() == column.value">
          #{item.timeFrom,jdbcType=INTEGER}
        </if>
        <if test="'timeTo'.toString() == column.value">
          #{item.timeTo,jdbcType=INTEGER}
        </if>
        <if test="'matchMode'.toString() == column.value">
          #{item.matchMode,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'priority'.toString() == column.value">
          #{item.priority,jdbcType=INTEGER}
        </if>
        <if test="'enabled'.toString() == column.value">
          #{item.enabled,jdbcType=BIT}
        </if>
        <if test="'dispatchMode'.toString() == column.value">
          #{item.dispatchMode,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>