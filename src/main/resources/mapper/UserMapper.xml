<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dns.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.dns.entity.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="accesstoken" jdbcType="VARCHAR" property="accesstoken" />
    <result column="nonce" jdbcType="VARCHAR" property="nonce" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="lastLoginIP" jdbcType="VARCHAR" property="lastLoginIP" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `type`, `name`, `password`, salt, accesstoken, nonce, enabled, lastLoginTime, 
    lastLoginIP
  </sql>
  <select id="selectByExample" parameterType="cn.dns.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `user`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `user`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `user`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.dns.entity.UserExample">
    delete from `user`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.dns.entity.User" useGeneratedKeys="true" keyProperty="id">
    insert into `user` (id, `type`, `name`, 
      `password`, salt, accesstoken, 
      nonce, enabled, lastLoginTime, 
      lastLoginIP)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{accesstoken,jdbcType=VARCHAR}, 
      #{nonce,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{lastLoginIP,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.dns.entity.User">
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="accesstoken != null">
        accesstoken,
      </if>
      <if test="nonce != null">
        nonce,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime,
      </if>
      <if test="lastLoginIP != null">
        lastLoginIP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="accesstoken != null">
        #{accesstoken,jdbcType=VARCHAR},
      </if>
      <if test="nonce != null">
        #{nonce,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIP != null">
        #{lastLoginIP,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.dns.entity.UserExample" resultType="java.lang.Long">
    select count(*) from `user`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `user`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.accesstoken != null">
        accesstoken = #{record.accesstoken,jdbcType=VARCHAR},
      </if>
      <if test="record.nonce != null">
        nonce = #{record.nonce,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.lastLoginTime != null">
        lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginIP != null">
        lastLoginIP = #{record.lastLoginIP,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `user`
    set id = #{record.id,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      accesstoken = #{record.accesstoken,jdbcType=VARCHAR},
      nonce = #{record.nonce,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      lastLoginIP = #{record.lastLoginIP,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dns.entity.User">
    update `user`
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="accesstoken != null">
        accesstoken = #{accesstoken,jdbcType=VARCHAR},
      </if>
      <if test="nonce != null">
        nonce = #{nonce,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIP != null">
        lastLoginIP = #{lastLoginIP,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dns.entity.User">
    update `user`
    set `type` = #{type,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      accesstoken = #{accesstoken,jdbcType=VARCHAR},
      nonce = #{nonce,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      lastLoginIP = #{lastLoginIP,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `user`
    (id, `type`, `name`, `password`, salt, accesstoken, nonce, enabled, lastLoginTime, 
      lastLoginIP)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.type,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.password,jdbcType=VARCHAR}, #{item.salt,jdbcType=VARCHAR}, #{item.accesstoken,jdbcType=VARCHAR}, 
        #{item.nonce,jdbcType=VARCHAR}, #{item.enabled,jdbcType=BIT}, #{item.lastLoginTime,jdbcType=TIMESTAMP}, 
        #{item.lastLoginIP,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `user` (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'password'.toString() == column.value">
          #{item.password,jdbcType=VARCHAR}
        </if>
        <if test="'salt'.toString() == column.value">
          #{item.salt,jdbcType=VARCHAR}
        </if>
        <if test="'accesstoken'.toString() == column.value">
          #{item.accesstoken,jdbcType=VARCHAR}
        </if>
        <if test="'nonce'.toString() == column.value">
          #{item.nonce,jdbcType=VARCHAR}
        </if>
        <if test="'enabled'.toString() == column.value">
          #{item.enabled,jdbcType=BIT}
        </if>
        <if test="'lastLoginTime'.toString() == column.value">
          #{item.lastLoginTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'lastLoginIP'.toString() == column.value">
          #{item.lastLoginIP,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>